     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  extern printf
     9                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  import printf msvcrt.dll
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16                                      
    17 00000000 4E756D61723A202564-         mesaj db "Numar: %d", 0
    17 00000009 00                 
    18 0000000A 2C000000                    numar dd 44
    19 0000000E 3B000000                    numar2 dd 59
    20 00000012 00000000                    rez dd 0
    21                                  
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 A1[0A000000]                    mov eax, [numar]
    27 00000005 8B1D[0E000000]                  mov ebx, [numar2]
    28 0000000B 01D8                            add eax, ebx
    29 0000000D A3[12000000]                    mov [rez], eax
    30                                          
    31                                          ; printf(mesaj, rez)
    32                                          
    33 00000012 FF35[12000000]                  push dword [rez]
    34 00000018 68[00000000]                    push mesaj
    35 0000001D FF15[00000000]                  call [printf]
    36 00000023 83C404                          add esp, 4
    37                                      
    38                                          ; exit(0)
    39 00000026 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    40 00000028 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
