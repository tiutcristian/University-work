     1                                  bits 32
     2                                  global start        
     3                                  extern exit
     4                                  import exit msvcrt.dll
     5                                  
     6                                  segment data use32 class=data
     7 00000000 010306020307                s1 db 1, 3, 6, 2, 3, 7
     8                                      len equ $-s1
     9 00000006 060308010205                s2 db 6, 3, 8, 1, 2, 5
    10 0000000C <res 00000006>              d resb len
    11                                  
    12                                  segment code use32 class=code
    13                                      start:
    14                                          ; initializations
    15 00000000 B906000000                      MOV ECX, len
    16 00000005 BE[00000000]                    MOV ESI, s1
    17 0000000A BF[0C000000]                    MOV EDI, d
    18                                          
    19                                          ; loop
    20                                          START_LOOP:    
    21 0000000F AC                                      LODSB           ; AL = byte [ESI]
    22 00000010 88C3                                    MOV BL, AL      ; BL = byte [ESI] (s1)
    23 00000012 83C605                                  ADD ESI, len-1  ; move ESI to the address of the corresponding byte in s2
    24 00000015 AC                                      LODSB           ; AL = byte [ESI] (s2)
    25 00000016 83EE06                                  SUB ESI, len    ; move ESI to the address of the next byte in s1 for the next execution of the loop
    26                                                  
    27 00000019 38C3                                    CMP BL, AL
    28 0000001B 7702                                    JA STORE        ; if s1[i] > s2[i] we store s2[i] which is in AL
    29 0000001D 88D8                                    MOV AL, BL      ; otherwise we first move BL to AL so s1[i] is in AL
    30                                              STORE:
    31 0000001F AA                                      STOSB
    32 00000020 E2ED                            LOOP START_LOOP
    33                                      
    34 00000022 6A00                            push    dword 0
    35 00000024 FF15[00000000]                  call    [exit]
