The application must implement algorithms for:  

	- arithmetic operations for positive integers: addition, subtraction, multiplication and division by one digit, 
	  in a base p in {2,3,...,9,10,16} 
	- conversions of natural numbers between two bases p,q in {2,3,...,9,10,16} using the substitution method or successive divisions and rapid 
	  conversions between two bases p,q in {2, 4, 8, 16}. 
	- and must have a menu such that all operations and conversion methods to be verified separately. 

--------------------------------------------------------------------------------------------------------------------

Submitted in the corresponding assignment:
	- the executable form
	- the code of the application 	
	- the documentation 
	
--------------------------------------------------------------------------------------------------------------------
	
The documentation: 
	- will follow the same structure as the Programming Fundament’s documentations
	- must contain at least: 
		- the problem statement for the implemented application
		- the used algorithms in pseudo-code
		- implementation considerations 
		- test data  
		
--------------------------------------------------------------------------------------------------------------------

The grade is computed as follows: 
	- 10%: by default 
	- 70% : the application (the authors name will be found in code and will be visible at run time too) 
		1p - algorithm for the method of successive divisions  								DONE
		1p - algorithm for the substitution method  										NO
		1p – algorithm for conversion using 10 as an intermediate base 						NO
		2p - rapid conversions (executable form) between two bases p,q in {2, 4, 8, 16}. 	NO
		1p addition of two numbers in a base 												DONE
		1p subtraction of two numbers in a base 											DONE
		1p multiplication of a number by a digit in a base 									DONE
		1p division of a number by a digit in a base 										NO	
		1p code quality (indentation, use of comments, suggestive variables names) 			DONE
	20%: documentation  
		1p problem statement 																
		1p sub-algorithm’s diagram 
		1p used data type specification 
		3p specification and pseudo-code for the important algorithms used 
			1p input, output, preconditions, post-conditions
			2p pseudo-code 
		3p at least a set of test data for the complete application, more data sets where is needed 
		1p documentation clearness (structured, well written, ...)
		
--------------------------------------------------------------------------------------------------------------------

NOTE: If the electronic homework is at least 80% similar (http://www.tools4noobs.com/online_tools/string_similarity/) to another one from this year or a previous year of study, the electronic homework will not be corrected (neither the documentation), and the corresponding points are lost.  
